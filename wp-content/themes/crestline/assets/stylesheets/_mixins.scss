/*
Set Border radious for any element
@include border-radius(0px);
--------------------- */
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

/*
opacity filter with x-browser fallback
@include opacity(.9);
--------------------- */
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

/*
Truncate text
--------------------- */
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/*
Transform
@include transform(translateY(-50%));
--------------------- */
@mixin transform( $transform-props ) {
  -webkit-transform: $transform-props;
  -moz-transform: $transform-props;
  -ms-transform: $transform-props;
  -o-transform: $transform-props;
  transform: $transform-props;
}


/*
Background size with broswer prefix for cover image
@include cover-background(path/to/img.jpg);
--------------------- */
@mixin cover-background($img-uri) {
    background: url($img-uri) no-repeat center center fixed;
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
}

@mixin cover-background-no-img() {
    
    background-position: center center;
    background-repeat: no-repeat;
   // background-attachment: fixed;
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
}

/*
Background size with broswer prefix for cover
@include background-cover(cover);
--------------------- */
@mixin background-cover($size) {
    -webkit-background-size: $size;
    -moz-background-size: $size;
    -o-background-size: $size;
    background-size: $size;
}

// Options
//
// $screen-xs: 480px
// $screen-sm: 768px
// $screen-md: 992px
// $screen-lg: 1200px
//

@mixin respond-to($breakpoint) {
     @media only screen and (min-width: $breakpoint) { 
         @content;
     }
}

@mixin respond-between($min, $max) {
  @media all and (min-width:$min) and (max-width:$max) {
    @content
  }
}

/* Mixin */
@mixin vertical-align {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

/*
CSS Arrow Shape
@include arrow-right(10px, $blue);
--------------------- */
@mixin arrow-down($size, $color) {
  height: 0;
  width: 0;
  border-top: $size solid $color;
  border-right: $size solid transparent;
  border-left: $size solid transparent;
  border-bottom: 0 solid transparent;
}

@mixin arrow-up($size, $color) {
  height: 0;
  width: 0;
  border-bottom: $size solid $color;
  border-right: $size solid transparent;
  border-left: $size solid transparent;
  border-top: 0 solid transparent;
}

@mixin arrow-left($size, $color) {
  height: 0;
  width: 0;
  border-right: $size solid $color;
  border-top: $size solid transparent;
  border-bottom: $size solid transparent;
  border-left: 0 solid transparent;
}

@mixin arrow-right($size, $color) {
  height: 0;
  width: 0;
  border-left: $size solid $color;
  border-top: $size solid transparent;
  border-bottom: $size solid transparent;
  border-right: 0 solid transparent;
}

/*
Positioning - Absolute / Fixed / Relative
Set position (top, right, bottom, left ) & z-index
@include absolute($t:50%, $l:0, $z: 9999);
@include relative;
--------------------- */
@mixin absolute ($t: null, $r: null, $b: null, $l: null, $z: null) {
  top: $t;
  right: $r;
  bottom: $b;
  left: $l;
  z-index: $z;
  position: absolute;
}

@mixin fixed ($t: null, $r: null, $b: null, $l: null, $z: null) {
  top: $t;
  right: $r;
  bottom: $b;
  left: $l;
  z-index: $z;
  position: fixed;
}

@mixin relative ($t: null, $r: null, $b: null, $l: null, $z: null) {
  top: $t;
  right: $r;
  bottom: $b;
  left: $l;
  z-index: $z;
  position: relative;
}

/*
Firefox hack for images with opacity changes
@include ff-hack;
--------------------- */
@mixin ff-hack {
  background-color: $black; 
  -moz-backface-visibility: hidden; 
  -webkit-transform: translateZ(0px); 
}


//font size
//usage:
//body {
//  @include font-size(16);
//}
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

%clearfix {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}


//retina images
//useage:
//div.logo {
//  background: url("logo.png") no-repeat;
//  @include image-2x("logo2x.png", 100px, 25px);
//}
@mixin image-2x($image, $width, $height) {
    background-size: $width $height;
    display: block;
    width:  $width;
    height: $height;
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    
  }
}